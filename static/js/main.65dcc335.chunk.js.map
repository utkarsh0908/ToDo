{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["App","useState","inputList","setInputList","items","setitems","className","type","placeholder","value","onChange","event","target","onClick","olditems","map","itemval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMA0CiBA,EAxCL,WAEV,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAYA,OACE,mCACE,qBAAKC,UAAU,WAAf,SACE,sBAAKA,UAAU,aAAf,UACE,uBACA,6CACA,uBACA,gCACA,uBAAOC,KAAK,OAAOC,YAAY,aAAaC,MAAOP,EAAWQ,SAlBpD,SAACC,GACjBR,EAAaQ,EAAMC,OAAOH,QAiB+DH,UAAU,SAC7F,wBAAQA,UAAU,YAAYO,QAfnB,WACjBR,GAAS,SAACS,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAqBZ,OAEvBC,EAAa,KAWP,oBAGA,oBAAIG,UAAU,OAAd,SAGGF,EAAMW,KAAI,SAACC,GACV,OAAO,6BAAKA,iBCrBXC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.65dcc335.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst App = () => {\n\n  const [inputList, setInputList] = useState(\"\");\n  const [items, setitems] = useState([]);\n\n  const itemEvent = (event) => {\n    setInputList(event.target.value);\n  };\n\n  const listOfItem = () => {\n    setitems((olditems) => {\n      return [...olditems, inputList]; \n    });\n    setInputList('');\n  };\n  return (\n    <>\n      <div className=\"main_div\">\n        <div className=\"center_div\">\n          <br/>\n          <h1> ToDo List </h1>\n          <br/>\n          <div>\n          <input type=\"text\" placeholder=\"Add a item\" value={inputList} onChange={itemEvent} className=\"item\"/>\n          <button className=\"addButton\" onClick={listOfItem}> + </button>\n          </div>\n\n          <ol className=\"list\">\n            {/* <li> {inputList} </li> */}\n\n            {items.map((itemval) => {\n              return <li>{itemval}</li>\n            })}\n          </ol>\n        </div>\n      </div>\n\n    </>\n  )\n}\n  export default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}